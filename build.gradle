import java.text.SimpleDateFormat

plugins {
	id 'fml-loom' version '0.1.local'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

static def buildTime() {
	def df = new SimpleDateFormat("yyyyMMddHHmm")
	df.setTimeZone(TimeZone.getTimeZone("GMT+8"))
	return df.format(new Date())
}

base {
//	archivesName = project.archives_base_name + "-dev-build." + buildTime()
	archivesName = "[极难拓展]" + project.archives_base_name
}

repositories {
	mavenLocal()
	maven {
		name = "Spongepowered"
		url = "https://repo.spongepowered.org/repository/maven-public/"
	}
}

loom {
	accessWidenerPath = file("src/main/resources/bex.accesswidener")
	mergedMinecraftJar()
	setFML(new File("${lib_dir}/${fish_mod_loader}"))
	mods {
		"BeyondExtreme" {
			sourceSet sourceSets.main
		}
	}
}

runClient{
	args("--username", "${username}", "--session", "a.a.a.a", "--width", 854, "--height", 480)
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.fmlMCPMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	implementation("com.google.code.gson:gson:2.11.0")
	implementation("it.unimi.dsi:fastutil:8.5.12")

	implementation files("${lib_dir}/RustedIronCore-1.4.0.jar")
	implementation files("${lib_dir}/RustedIronCore-1.4.0-source.jar")
	implementation files("${lib_dir}/MITE-ITE-2.0.17.jar")
	implementation files("${lib_dir}/Baubles.jar")
	implementation files("${lib_dir}/Shop-1.0.0.jar")
	implementation files("${lib_dir}/ManyLib-2.2.3.jar")
	implementation files("${lib_dir}/ModMenu-10.1.0.jar")
	implementation files("${lib_dir}/emi-1.1.23+1.6.4-MITE+fish.jar")
	implementation files("${lib_dir}/Extreme-0.1.6.7-test.jar")
	implementation files("${lib_dir}/conditional-mixin-0.6.4.jar")
	implementation files(loom.getFML().toPath())

}

processResources {
	inputs.property "version", project.version

	filesMatching("fml.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
